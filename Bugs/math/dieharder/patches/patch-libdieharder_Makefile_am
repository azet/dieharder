$OpenBSD$
--- libdieharder/Makefile.am.orig	Mon May 21 17:34:27 2007
+++ libdieharder/Makefile.am	Mon Jul 16 17:34:52 2007
@@ -12,8 +12,8 @@
 # make svn      does a svn commit and creates the timestamp $(SVN)
 # make sync     does a svn commit and rsyncs to list of hosts
 #========================================================================
-PROJECT = dieharder
-DIR = libdieharder
+#PROJECT = dieharder
+#DIR = libdieharder
 
 #========================================================================
 # This is essential.  The rpmbuild overrides it, but we have to make
@@ -31,65 +31,67 @@ SVNTIME = $(DIR:=.svn.time)
 # This is automagically set in the toplevel build.  Do not edit by
 # hand.
 VERSION=@VERSION@
-VERSION_MAJOR = $(shell expr $(VERSION) : '\(.*\)\..*\..*' \| $(VERSION))
 RELEASE=0
 
-# This is the library from which both wulfstat and wulflogger (and maybe
-# other stuff in the future) is built.
-PROGMAN = libdieharder.3
-# (FC "requires" no static library build)
-# PROGLIB_A = libdieharder.a
-PROGLIB_SO = libdieharder.so
-PROGLIB_SONAME = libdieharder.so.$(VERSION_MAJOR)
-PROGLIB_SO_VERSION = libdieharder.so.$(VERSION)
+lib_LTLIBRARIES = libdieharder.la
+libdieharder_la_LIBADD = -L${libdir} -lgsl -lgslcblas -lm
+libdieharder_la_LDFLAGS = -version-number @DIEHARDER_LT_VERSION@
+libdieharder_la_SOURCES = \
+	 Vtest.c \
+	 Xtest.c \
+	 bits.c \
+	 chisq.c \
+	 diehard_2dsphere.c \
+	 diehard_3dsphere.c \
+	 diehard_birthdays.c \
+	 diehard_bitstream.c \
+	 diehard_count_1s_byte.c \
+	 diehard_count_1s_stream.c \
+	 diehard_craps.c \
+	 diehard_dna.c \
+	 diehard_operm5.c \
+	 diehard_opso.c \
+	 diehard_oqso.c \
+	 diehard_parking_lot.c \
+	 diehard_rank_32x32.c \
+	 diehard_rank_6x8.c \
+	 diehard_runs.c \
+	 diehard_squeeze.c \
+	 diehard_sums.c \
+	 kstest.c \
+	 marsaglia_tsang_gcd.c \
+	 marsaglia_tsang_gorilla.c \
+	 parse.c \
+	 prob.c \
+	 random_seed.c \
+	 rank.c \
+	 rgb_bitdist.c \
+	 rgb_lmn.c \
+	 rgb_persist.c \
+	 rgb_timing.c \
+	 rng_ca.c \
+	 rng_dev_random.c \
+	 rng_dev_urandom.c \
+	 rng_file_input.c \
+	 rng_file_input_raw.c \
+	 rng_kiss.c \
+	 sample.c \
+	 std_test.c \
+	 sts_monobit.c \
+	 sts_runs.c \
+	 timing.c
 
-#========================================================================
-# Define all sources.  Note that we choose to depend on ALL the includes
-# in the include directory, which cannot be empty or this will barf.
-#========================================================================
-LIBSOURCES = $(shell ls *.c  2>&1 | sed -e "/\/bin\/ls:/d")
-LIBOBJECTS = $(LIBSOURCES:.c=.o)
-
 DEFINES = -DVERSION=$(VERSION)
 
 #========================================================================
 # Define parameters and directives needed in compile/link steps.
 #========================================================================
-# C Compiler
-CC = gcc
 
 # Compile flags (use fairly standard -O3 as default)
-CFLAGS = -O3 $(DEFINES) -I ../include
+AM_CPPFLAGS = $(DEFINES) -I ${top_srcdir}/include -I ${includedir}
+AM_CFLAGS = -O3
 
-# Linker flags
-LDFLAGS = -g -fpic -shared -Wl,-soname,$(PROGLIB_SONAME)
-
-# Libraries
-LIBS = -lgsl -lgslcblas -lm
-
 #========================================================================
-# List of variants one can make.  all is the default.  We always
-# presume the simplest of dependencies and remake if includes change
-# for example.
-#========================================================================
-all: $(INCTIME) $(PROGLIB_SO_VERSION) # $(PROGLIB_A)
-
-# This has to ALWAYS run before a build.
-$(INCTIME):
-	(install -d $(includedir)/dieharder; \
-	install -m 644 ../include/dieharder/*.h $(includedir)/dieharder;)
-
-# FC "requires" no static lib build/install	
-# $(PROGLIB_A): $(INCTIME) $(LIBOBJECTS) $(LIBINCLUDES)
-# 	ar r $(PROGLIB_A) $(LIBOBJECTS)
-# 	ranlib $(PROGLIB_A)
-
-$(PROGLIB_SO_VERSION): $(INCTIME) $(LIBOBJECTS) $(LIBINCLUDES)
-	gcc $(LDFLAGS) -o $(PROGLIB_SO_VERSION) $(LIBOBJECTS)
-	ldconfig -n .
-	ln -sf $(PROGLIB_SO_VERSION) $(PROGLIB_SO)
-
-#========================================================================
 # The only safe place to do commits is in the toplevel directory
 #========================================================================
 svn:
@@ -108,34 +110,23 @@ printout:
 	$(LPR) $(LIBSOURCES) $(LIBINCLUDES)
 
 #========================================================================
-#  A standard cleanup target
-#========================================================================
-clean:
-	rm -f core $(PROGLIB_SO)* $(LIBOBJECTS) $(PROGMAN).gz
-
-#========================================================================
 # This is critical.  For the toplevel rpm build to succeed,
 #  make prefix=/usr install
 # (run by rpmbuild from the specfile) has to work, in the right order.
 # This target has to install precisely the files required by the
 # specfile for the dieharder package, in precisely the right locations.
 #========================================================================
-install: $(PROGLIB_SO_VERSION) $(PROGLIB_A) $(PROGMAN)
-	(install -d $(libdir); \
-	install -m 755 $(PROGLIB_SO_VERSION) $(libdir)/$(PROGLIB_SO_VERSION); \
-        ln -sf $(libdir)/$(PROGLIB_SO_VERSION) $(libdir)/$(PROGLIB_SO); \
-	install -d $(includedir)/dieharder; \
-	install -m 644 ../include/dieharder/*.h $(includedir)/dieharder; \
-	install -d $(prefix)/share/man/man3; \
-	gzip -c -9 $(PROGMAN) > $(PROGMAN).gz; \
-	install -m 644 $(DIR).3.gz $(prefix)/share/man/man3)
+#install: $(PROGLIB_SO_VERSION) $(PROGLIB_A) $(PROGMAN)
+#	(install -d $(libdir); \
+#	install -m 755 $(PROGLIB_SO_VERSION) $(libdir)/$(PROGLIB_SO_VERSION); \
+#        ln -sf $(libdir)/$(PROGLIB_SO_VERSION) $(libdir)/$(PROGLIB_SO); \
+#	install -d $(includedir)/dieharder; \
+#	install -m 644 ../include/dieharder/*.h $(includedir)/dieharder; \
+#	install -d $(prefix)/share/man/man3; \
+#	gzip -c -9 $(PROGMAN) > $(PROGMAN).gz; \
+#	install -m 644 $(DIR).3.gz $(prefix)/share/man/man3)
 
 # FC requires no static lib install
 # 	install -m 755 $(PROGLIB_A) $(libdir)/$(PROGLIB_A); \
-# ldconfig -n $(libdir); \
-#========================================================================
-# We give all generic rules below.  Currently we only need a rule for 
-# objects.
-#========================================================================
-%.o:%.c $(LIBINCLUDES) Makefile
-	$(CC) -fpic -c $(CFLAGS) $<
+# ldconfig -n $(libdir);
+
