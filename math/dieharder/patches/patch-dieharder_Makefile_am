$OpenBSD$
--- dieharder/Makefile.am.orig	Mon May 21 17:34:27 2007
+++ dieharder/Makefile.am	Mon Jul 16 15:54:25 2007
@@ -12,10 +12,52 @@
 # make svn      does a svn commit and creates the timestamp $(SVN)
 # make sync     does a svn commit and rsyncs to list of hosts
 #========================================================================
-PROJECT = dieharder
-PROGRAM = dieharder
-DIR = $(PROGRAM)
 
+bin_PROGRAMS = dieharder
+dieharder_LDADD = ../libdieharder/libdieharder.la -L${libdir} -lgsl -lgslcblas -lm
+dieharder_SOURCES = \
+	add_my_types.c \
+	dieharder.c \
+	dieharder_exit.c \
+	empty_random.c \
+	gnu_r_rngs.c \
+	help.c \
+	histogram.c \
+	list_rand.c \
+	list_rngs.c \
+	output_rnds.c \
+	parsecl.c \
+	rdieharder.c \
+	run_diehard_2dsphere.c \
+	run_diehard_3dsphere.c \
+	run_diehard_birthdays.c \
+	run_diehard_bitstream.c \
+	run_diehard_count_1s_byte.c \
+	run_diehard_count_1s_stream.c \
+	run_diehard_craps.c \
+	run_diehard_dna.c \
+	run_diehard_operm5.c \
+	run_diehard_opso.c \
+	run_diehard_oqso.c \
+	run_diehard_parking_lot.c \
+	run_diehard_rank_32x32.c \
+	run_diehard_rank_6x8.c \
+	run_diehard_runs.c \
+	run_diehard_squeeze.c \
+	run_diehard_sums.c \
+	run_marsaglia_tsang_gcd.c \
+	run_rgb_bitdist.c \
+	run_rgb_persist.c \
+	run_rgb_timing.c \
+	run_sts_monobit.c \
+	run_sts_runs.c \
+	run_user_template.c \
+	startup.c \
+	test.c \
+	testbits.c \
+	user_template.c \
+	work.c
+
 #========================================================================
 # This is essential.  The rpmbuild overrides it, but we have to make
 # build "work" when executed only in the source tree directory itself.
@@ -39,57 +81,25 @@ VERSION=@VERSION@
 # We also have dependencies that extend to the libdieharder source
 # directory, as we need to force a build if any of them change.
 #========================================================================
-SRCSOURCES = $(shell ls *.c  2>&1 | sed -e "/\/bin\/ls:/d")
-SRCINCLUDES = $(shell ls *.h  2>&1 | sed -e "/\/bin\/ls:/d")
+#SRCSOURCES = $(shell ls *.c  2>&1 | sed -e "/\/bin\/ls:/d")
+#SRCINCLUDES = $(shell ls *.h  2>&1 | sed -e "/\/bin\/ls:/d")
 
 # These are important dependencies, although it isn't easy to
 # see how to force a consistent build when working on the UI
 # and library at the same time.  Maybe with particular make targets...
-LIBINCLUDES = $(shell ls ../include/dieharder/*.h  2>&1 | sed -e "/\/bin\/ls:/d")
-PROGLIB_SONAME = $(LIBDIR)/libdieharder.so.$(VERSION)
+#LIBINCLUDES = $(shell ls ../include/dieharder/*.h  2>&1 | sed -e "/\/bin\/ls:/d")
 
-SOURCES = $(LIBSOURCES) $(SRCSOURCES)
-INCLUDES = $(LIBINCLUDES) $(SRCINCLUDES)
-OBJECTS = $(SRCSOURCES:.c=.o)
-
 DEFINES = -DVERSION=$(VERSION)
 
 #========================================================================
 # Define parameters and directives needed in compile/link steps.
 #========================================================================
-# C Compiler
-CC = gcc
 
 # Compile flags (use fairly standard -O3 as default)
-CFLAGS = -O3 -I ../include $(DEFINES) 
+AM_CPPFLAGS = -I ${top_srcdir}/include $(DEFINES) -I ${includedir}
+AM_CFLAGS = -O3
 
-# Linker flags.
-LDFLAGS =
-
-# Libraries
-LIBS = -L ../libdieharder -ldieharder -lgsl -lgslcblas -lm
-
 #========================================================================
-# List of variants one can make.  all is the default.  We always
-# presume the simplest of dependencies and remake if includes change
-# for example.
-#========================================================================
-all: $(PROGRAM)
-
-$(PROGRAM): $(OBJECTS) $(PROGLIB_SONAME)
-	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(OBJECTS) $(LIBS) 
-
-#========================================================================
-# This is cautiously permitted.  REALLY, though, we need a conditional
-# that punts with a warning if we try this during an rpm build and
-# the library is not found -- the right solution then is to install
-# the library first!
-#========================================================================
-$(PROGLIB_SONAME):
-	- (cd ../libdieharder ;\
-	 $(MAKE))
-
-#========================================================================
 # The only safe place to do commits is in the toplevel directory
 #========================================================================
 svn:
@@ -108,30 +118,17 @@ printout:
 	$(LPR) $(SRCSOURCES) $(SRCINCLUDES)
 
 #========================================================================
-#  A standard cleanup target
-#========================================================================
-clean : 
-	- rm -f core $(PROGRAM) *.o $(PROGRAM).1.gz
-
-#========================================================================
 # This is critical.  For the toplevel rpm build to succeed,
 #  make prefix=/usr install
 # (run by rpmbuild from the specfile) has to work, in the right order.
 # This target has to install precisely the files required by the
 # specfile for the dieharder package, in precisely the right locations.
 #========================================================================
-install : $(PROGRAM)
-	(strip $(PROGRAM);\
-	install -d $(prefix)/bin; \
-	install -m 755 $(PROGRAM) $(prefix)/bin; \
-	install -d $(prefix)/share/man/man1; \
-	gzip -c -9 $(PROGRAM).1 > $(PROGRAM).1.gz; \
-	install -m 644 $(PROGRAM).1.gz $(prefix)/share/man/man1)
-
-#========================================================================
-# We give all generic rules below.  Currently we only need a rule for 
-# objects.
-#========================================================================
-%.o:%.c
-	$(CC) -c $(CFLAGS) $<
+#install : $(PROGRAM)
+#	(strip $(PROGRAM);\
+#	install -d $(prefix)/bin; \
+#	install -m 755 $(PROGRAM) $(prefix)/bin; \
+#	install -d $(prefix)/share/man/man1; \
+#	gzip -c -9 $(PROGRAM).1 > $(PROGRAM).1.gz; \
+#	install -m 644 $(PROGRAM).1.gz $(prefix)/share/man/man1)
 
