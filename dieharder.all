#==================================================================
#                        rgb_timing
# This test times the selected random number generator, only.
#==================================================================
#==================================================================
# rgb_timing() test using the mt19937_1999 generator 
# Average time per rand = 3.683800e+01 nsec.
# Rands per second = 2.714588e+07.

#==================================================================
#                Diehard "Birthdays" test (modified).
# Each test determines the number of matching intervals from 512
# "birthdays" (by default) drawn on a 24-bit "year" (by
# default).  This is repeated 100 times (by default) and the
# results cumulated in a histogram.  Repeated intervals should be
# distributed in a Poisson distribution if the underlying generator
# is random enough, and a a chisq and p-value for the test are
# evaluated relative to this null hypothesis.
#
# In the original diehard test, 9 different "windows" 24 bits
# wide were sampled in this way for a single data set, and
# the 9 p-values thus obtained subjected to a Kolmogorov-Smirnov (KS)
# test.  However, values drawn from these windows only differ by a
# single bit.  The samples in this version of the test are
# completely independent but are still selected from a (random)
# offset within each integer tested, with a periodic boundary
# condition.  Many more p-values are accumulated in this way before
# performing the final KS test. It is therefore stronger than the
# original test (I think).   At any rate, it brings otherwise strong
# generators to their metaphorical knees at -t 200.
#
# It is recommended that you run this at or near the original
# 100 test samples per p-value with -t 100.
#==================================================================
#                        Run Details
# Random number generator tested: mt19937_1999
# Samples per test run = 100.
# Test run 100 times to cumulate p-values for KS test.
# 512 samples drawn from 24-bit integers masked out of a
# 32 bit random integer.  lambda = 2.000000, kmax = 6, tsamples = 100
#==================================================================
#                Histogram of p-values
# Counting histogram bins, binscale = 0.100000
#     20|    |    |    |    |    |    |    |    |    |    |
#       |    |    |    |    |    |    |    |    |    |    |
#     18|    |    |    |    |    |    |    |    |    |    |
#       |    |    |    |    |    |****|    |    |    |    |
#     16|    |    |    |    |    |****|    |    |    |    |
#       |****|    |    |    |    |****|    |    |    |    |
#     14|****|    |    |    |    |****|    |    |    |    |
#       |****|    |    |    |    |****|    |    |    |    |
#     12|****|    |    |    |    |****|    |    |    |****|
#       |****|    |    |****|    |****|    |    |    |****|
#     10|****|****|    |****|    |****|    |    |****|****|
#       |****|****|    |****|    |****|    |    |****|****|
#      8|****|****|    |****|    |****|    |    |****|****|
#       |****|****|****|****|****|****|    |    |****|****|
#      6|****|****|****|****|****|****|    |****|****|****|
#       |****|****|****|****|****|****|****|****|****|****|
#      4|****|****|****|****|****|****|****|****|****|****|
#       |****|****|****|****|****|****|****|****|****|****|
#      2|****|****|****|****|****|****|****|****|****|****|
#       |****|****|****|****|****|****|****|****|****|****|
#       |--------------------------------------------------
#       | 0.1| 0.2| 0.3| 0.4| 0.5| 0.6| 0.7| 0.8| 0.9| 1.0|
#==================================================================
#==================================================================
#                          Results
# p = 0.667201 for diehard_birthdays test from Kuiper 
#     Kolmogorov-Smirnov test on 100 pvalues.
# Generator mt19937_1999 PASSED at > 5% for diehard_birthdays.
#==================================================================

#==================================================================
#                Diehard "OPERM5" test.
# This is the OPERM5 test.  It looks at a sequence of one mill- 
# ion 32-bit random integers.  Each set of five consecutive     
# integers can be in one of 120 states, for the 5! possible or- 
# derings of five numbers.  Thus the 5th, 6th, 7th,...numbers   
# each provide a state. As many thousands of state transitions  
# are observed,  cumulative counts are made of the number of    
# occurences of each state.  Then the quadratic form in the     
# weak inverse of the 120x120 covariance matrix yields a test   
# equivalent to the likelihood ratio test that the 120 cell     
# counts came from the specified (asymptotically) normal dis-   
# tribution with the specified 120x120 covariance matrix (with  
# rank 99).  This version uses 1,000,000 integers, twice.       
#==================================================================
#                        Run Details
# Random number generator tested: mt19937_1999
# Samples per test run = 1000000.  diehard value is 1000000.
# Test run 100 times to cumulate p-values for KS test.
# Number of rands required is around 2^28 for 100 samples.
#==================================================================
#                Histogram of p-values
# Counting histogram bins, binscale = 0.100000
#     40|    |    |    |    |    |    |    |    |    |    |
#       |    |    |    |    |    |    |    |    |    |    |
#     36|    |    |    |    |    |    |    |    |    |    |
#       |    |    |    |    |    |    |    |    |    |    |
#     32|    |    |    |    |    |    |    |    |    |****|
#       |    |    |    |    |    |    |    |    |    |****|
#     28|    |    |    |    |    |    |    |    |    |****|
#       |    |    |    |    |    |    |    |    |    |****|
#     24|****|    |    |    |    |    |    |    |    |****|
#       |****|    |    |    |    |    |    |    |    |****|
#     20|****|    |    |    |    |    |    |    |    |****|
#       |****|    |    |    |    |    |    |    |    |****|
#     16|****|    |    |    |    |    |    |    |    |****|
#       |****|    |    |    |    |    |    |    |    |****|
#     12|****|    |    |    |    |    |    |    |    |****|
#       |****|****|    |    |    |    |    |    |    |****|
#      8|****|****|    |    |    |****|    |    |    |****|
#       |****|****|    |    |    |****|    |****|    |****|
#      4|****|****|    |****|****|****|    |****|****|****|
#       |****|****|    |****|****|****|****|****|****|****|
#       |--------------------------------------------------
#       | 0.1| 0.2| 0.3| 0.4| 0.5| 0.6| 0.7| 0.8| 0.9| 1.0|
#==================================================================
#==================================================================
#                          Results
# p = 0.000000 for diehard_operm5 test from Kuiper 
#     Kolmogorov-Smirnov test on 100 pvalues.
# Generator mt19937_1999 FAILED at < 0.01% for diehard_operm5.
#==================================================================

#==================================================================
#              Diehard 32x32 "Binary Rank" test
# This is the BINARY RANK TEST for 31x31 matrices. The leftmost 
# 31 bits of 31 random integers from the test sequence are used 
# to form a 31x31 binary matrix over the field {0,1}. The rank  
# is determined. That rank can be from 0 to 31, but ranks< 28   
# are rare, and their counts are pooled with those for rank 28. 
# Ranks are found for (default) 40,000 such random matrices and
# a chisquare test is performed on counts for ranks 31,30,29 and
# <=28.
#
# As always, the test is repeated and a KS test applied to the
# resulting p-values to verify that they are approximately uniform.
#==================================================================
# Random number generator tested: mt19937_1999
#                        Run Details
# Random number generator tested: mt19937_1999
# 32x32 samples per test run = 40000.  diehard value is 40000.
# Test run 100 times to cumulate p-values for KS test.
#==================================================================
#                Histogram of p-values
# Counting histogram bins, binscale = 0.100000
#     20|    |    |    |    |    |    |    |    |    |    |
#       |    |    |    |    |    |    |    |    |    |    |
#     18|    |    |    |    |    |    |    |    |    |    |
#       |    |****|    |    |    |    |    |    |    |    |
#     16|    |****|    |    |    |    |    |    |    |    |
#       |    |****|    |    |    |    |    |    |    |    |
#     14|    |****|    |    |    |    |    |****|    |    |
#       |    |****|****|    |    |    |    |****|    |    |
#     12|    |****|****|    |    |    |    |****|****|****|
#       |    |****|****|    |    |    |    |****|****|****|
#     10|****|****|****|    |    |    |    |****|****|****|
#       |****|****|****|    |    |    |    |****|****|****|
#      8|****|****|****|    |    |****|    |****|****|****|
#       |****|****|****|    |    |****|    |****|****|****|
#      6|****|****|****|    |****|****|    |****|****|****|
#       |****|****|****|****|****|****|    |****|****|****|
#      4|****|****|****|****|****|****|    |****|****|****|
#       |****|****|****|****|****|****|****|****|****|****|
#      2|****|****|****|****|****|****|****|****|****|****|
#       |****|****|****|****|****|****|****|****|****|****|
#       |--------------------------------------------------
#       | 0.1| 0.2| 0.3| 0.4| 0.5| 0.6| 0.7| 0.8| 0.9| 1.0|
#==================================================================
#==================================================================
#                          Results
# p = 0.036287 for diehard 32x32 binary rank test from 
#     Kuiper Kolmogorov-Smirnov test on 100 pvalues.
# Generator mt19937_1999 POSSIBLY WEAK at < 5% for diehard_rank_32x32.
# Recommendation:  Repeat test to verify failure.

#==================================================================
#             Diehard 6x8 "Binary Rank" test
# This is the BINARY RANK TEST for 6x8 matrices.  From each of
# six random 32-bit integers from the generator under test, a
# specified byte is chosen, and the resulting six bytes form a
# 6x8 binary matrix whose rank is determined.  That rank can be
# from 0 to 6, but ranks 0,1,2,3 are rare; their counts are
# pooled with those for rank 4. Ranks are found for 100,000
# random matrices, and a chi-square test is performed on
# counts for ranks 6,5 and <=4.
#
# As always, the test is repeated and a KS test applied to the
# resulting p-values to verify that they are approximately uniform.
#==================================================================
# Random number generator tested: mt19937_1999
#                        Run Details
# Random number generator tested: mt19937_1999
# 6x8 samples per test run = 100000.  diehard value is 100000.
# Test run 100 times to cumulate p-values for KS test.
#==================================================================
#                Histogram of p-values
# Counting histogram bins, binscale = 0.100000
#     20|    |    |    |    |    |    |    |    |    |    |
#       |    |    |    |    |    |    |    |    |    |    |
#     18|    |    |    |    |    |    |    |    |    |    |
#       |    |    |    |    |    |    |    |    |    |    |
#     16|    |    |    |    |    |    |    |    |    |    |
#       |****|    |    |    |    |    |    |    |    |    |
#     14|****|    |    |    |    |    |    |    |****|    |
#       |****|****|****|    |    |    |    |    |****|    |
#     12|****|****|****|    |    |    |    |    |****|    |
#       |****|****|****|    |****|    |    |    |****|    |
#     10|****|****|****|****|****|    |****|    |****|    |
#       |****|****|****|****|****|    |****|    |****|    |
#      8|****|****|****|****|****|    |****|    |****|    |
#       |****|****|****|****|****|****|****|    |****|    |
#      6|****|****|****|****|****|****|****|    |****|    |
#       |****|****|****|****|****|****|****|    |****|    |
#      4|****|****|****|****|****|****|****|    |****|****|
#       |****|****|****|****|****|****|****|****|****|****|
#      2|****|****|****|****|****|****|****|****|****|****|
#       |****|****|****|****|****|****|****|****|****|****|
#       |--------------------------------------------------
#       | 0.1| 0.2| 0.3| 0.4| 0.5| 0.6| 0.7| 0.8| 0.9| 1.0|
#==================================================================
#==================================================================
#                          Results
# p = 0.493415 for diehard 6x8 binary rank test from
#      Kuiper Kolmogorov-Smirnov test on 100 pvalues.
# Generator mt19937_1999 PASSED at > 5% for diehard_rank_6x8.

#==================================================================
#                Diehard "BITSTREAM" test.
# The file under test is viewed as a stream of bits. Call them  
# b1,b2,... .  Consider an alphabet with two "letters", 0 and 1 
# and think of the stream of bits as a succession of 20-letter  
# "words", overlapping.  Thus the first word is b1b2...b20, the 
# second is b2b3...b21, and so on.  The bitstream test counts   
# the number of missing 20-letter (20-bit) words in a string of 
# 2^21 overlapping 20-letter words.  There are 2^20 possible 20 
# letter words.  For a truly random string of 2^21+19 bits, the 
# number of missing words j should be (very close to) normally  
# distributed with mean 141,909 and sigma 428.  Thus            
#  (j-141909)/428 should be a standard normal variate (z score) 
# that leads to a uniform [0,1) p value.  The test is repeated  
# twenty times.                                                 
# 
# Note that of course we do not "restart file", when using gsl 
# generators, we just crank out the next random number. 
# We also do not bother to overlap the words.  rands are cheap. 
# Finally, we repeat the test (usually) more than twenty time.
#==================================================================
#                        Run Details
# Random number generator tested: mt19937_1999
# Samples per test FIXED at 2097152.
# Test run 100 times to cumulate p-values for KS test.
# Number of rands required is around 2^28 for 100 samples.
# Using non-overlapping samples (default).
#==================================================================
#                Histogram of p-values
# Counting histogram bins, binscale = 0.100000
#     40|    |    |    |    |    |    |    |    |    |    |
#       |    |    |    |    |    |    |    |    |    |    |
#     36|    |    |    |    |    |    |    |    |    |    |
#       |    |    |    |    |    |    |    |    |    |    |
#     32|    |    |    |    |    |    |    |    |    |    |
#       |    |    |    |    |    |    |    |    |    |    |
#     28|    |    |    |    |    |    |    |    |    |    |
#       |    |    |    |    |    |    |    |    |    |    |
#     24|    |    |    |    |    |    |    |    |    |    |
#       |    |    |    |    |    |    |    |    |    |    |
#     20|    |    |    |    |    |    |    |    |    |****|
#       |    |    |    |    |    |    |    |    |    |****|
#     16|    |    |    |    |    |    |    |    |    |****|
#       |    |    |    |    |    |    |    |    |    |****|
#     12|    |    |    |    |    |****|****|    |****|****|
#       |    |    |    |****|****|****|****|****|****|****|
#      8|    |    |****|****|****|****|****|****|****|****|
#       |    |    |****|****|****|****|****|****|****|****|
#      4|    |    |****|****|****|****|****|****|****|****|
#       |    |****|****|****|****|****|****|****|****|****|
#       |--------------------------------------------------
#       | 0.1| 0.2| 0.3| 0.4| 0.5| 0.6| 0.7| 0.8| 0.9| 1.0|
#==================================================================
#                          Results
# p = 0.000931 for diehard_bitstream test from
#     Kuiper Kolmogorov-Smirnov test on 100 pvalues.
# Generator mt19937_1999 POOR at < 1% for diehard_bitstream.
# Recommendation:  Repeat test to verify failure.
#==================================================================

#==================================================================
#                    Diehard "OPSO" test.
# The OPSO test considers 2-letter words from an alphabet of    
# 1024 letters.  Each letter is determined by a specified ten   
# bits from a 32-bit integer in the sequence to be tested. OPSO 
# generates  2^21 (overlapping) 2-letter words  (from 2^21+1    
# "keystrokes")  and counts the number of missing words---that  
# is 2-letter words which do not appear in the entire sequence. 
# That count should be very close to normally distributed with  
# mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should 
# be a standard normal variable. The OPSO test takes 32 bits at 
# a time from the test file and uses a designated set of ten    
# consecutive bits. It then restarts the file for the next de-  
# signated 10 bits, and so on.                                  
#==================================================================
#                        Run Details
# Random number generator tested: mt19937_1999
# Samples per test FIXED at 2097153.
# Test run 100 times to cumulate p-values for KS test.
# Number of rands required is around 2^28 for 100 samples.
# Using non-overlapping samples (default).
#==================================================================
#                Histogram of p-values
# Counting histogram bins, binscale = 0.100000
#     20|    |    |    |    |    |    |    |    |    |    |
#       |    |    |    |    |    |    |    |    |    |    |
#     18|    |    |    |    |    |    |    |    |    |    |
#       |    |    |    |    |    |    |    |    |    |    |
#     16|    |    |    |    |    |    |    |    |    |    |
#       |    |    |    |    |    |    |    |    |    |    |
#     14|    |    |    |    |    |    |    |    |    |    |
#       |    |    |    |    |    |    |    |    |    |    |
#     12|****|    |    |    |****|****|    |    |    |****|
#       |****|    |    |    |****|****|****|    |    |****|
#     10|****|    |    |****|****|****|****|    |    |****|
#       |****|    |    |****|****|****|****|    |    |****|
#      8|****|****|****|****|****|****|****|****|    |****|
#       |****|****|****|****|****|****|****|****|****|****|
#      6|****|****|****|****|****|****|****|****|****|****|
#       |****|****|****|****|****|****|****|****|****|****|
#      4|****|****|****|****|****|****|****|****|****|****|
#       |****|****|****|****|****|****|****|****|****|****|
#      2|****|****|****|****|****|****|****|****|****|****|
#       |****|****|****|****|****|****|****|****|****|****|
#       |--------------------------------------------------
#       | 0.1| 0.2| 0.3| 0.4| 0.5| 0.6| 0.7| 0.8| 0.9| 1.0|
#==================================================================
#                          Results
# p = 0.997289 for diehard_opso test from
#     Kuiper Kolmogorov-Smirnov test on 100 pvalues.
# Generator mt19937_1999 PASSED at > 5% for diehard_opso.
#==================================================================

#==================================================================
#                Diehard "OQSO" test.
#  OQSO means Overlapping-Quadruples-Sparse-Occupancy.        
#  The test OQSO is similar, except that it considers 4-letter 
#  words from an alphabet of 32 letters, each letter determined  
#  by a designated string of 5 consecutive bits from the test    
#  file, elements of which are assumed 32-bit random integers.   
#  The mean number of missing words in a sequence of 2^21 four-  
#  letter words,  (2^21+3 "keystrokes"), is again 141909, with   
#  sigma = 295.  The mean is based on theory; sigma comes from   
#  extensive simulation.                                         
# 
#  Note 2^21 = 2097152
#==================================================================
#                        Run Details
# Random number generator tested: mt19937_1999
# Samples per test FIXED at 2097152.
# Test run 100 times to cumulate p-values for KS test.
# Number of rands required is around 2^28 for 100 samples.
# Using non-overlapping samples (default).
#==================================================================
#                Histogram of p-